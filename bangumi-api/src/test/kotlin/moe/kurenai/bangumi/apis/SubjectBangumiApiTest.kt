/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package moe.kurenai.bangumi.apis

import io.kotlintest.specs.ShouldSpec

class SubjectBangumiApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of SubjectBangumiApi
        //val apiInstance = SubjectBangumiApi()

        // to test getCalendar
        should("test getCalendar") {
            // uncomment below to test getCalendar
            //val result : kotlin.collections.List<GetCalendar200ResponseInner> = apiInstance.getCalendar()
            //result shouldBe ("TODO")
        }

        // to test getRelatedCharactersBySubjectId
        should("test getRelatedCharactersBySubjectId") {
            // uncomment below to test getRelatedCharactersBySubjectId
            //val subjectId : kotlin.Int = 56 // kotlin.Int | 条目 ID
            //val result : kotlin.collections.List<RelatedCharacter> = apiInstance.getRelatedCharactersBySubjectId(subjectId)
            //result shouldBe ("TODO")
        }

        // to test getRelatedPersonsBySubjectId
        should("test getRelatedPersonsBySubjectId") {
            // uncomment below to test getRelatedPersonsBySubjectId
            //val subjectId : kotlin.Int = 56 // kotlin.Int | 条目 ID
            //val result : kotlin.collections.List<RelatedPerson> = apiInstance.getRelatedPersonsBySubjectId(subjectId)
            //result shouldBe ("TODO")
        }

        // to test getRelatedSubjectsBySubjectId
        should("test getRelatedSubjectsBySubjectId") {
            // uncomment below to test getRelatedSubjectsBySubjectId
            //val subjectId : kotlin.Int = 56 // kotlin.Int | 条目 ID
            //val result : kotlin.collections.List<V0SubjectRelation> = apiInstance.getRelatedSubjectsBySubjectId(subjectId)
            //result shouldBe ("TODO")
        }

        // to test getSubjectById
        should("test getSubjectById") {
            // uncomment below to test getSubjectById
            //val subjectId : kotlin.Int = 56 // kotlin.Int | 条目 ID
            //val result : Subject = apiInstance.getSubjectById(subjectId)
            //result shouldBe ("TODO")
        }

        // to test getSubjectImageById
        should("test getSubjectImageById") {
            // uncomment below to test getSubjectImageById
            //val subjectId : kotlin.Int = 56 // kotlin.Int | 条目 ID
            //val type : kotlin.String = type_example // kotlin.String | 枚举值 {small|grid|large|medium|common}
            //apiInstance.getSubjectImageById(subjectId, type)
        }

        // to test getSubjects
        should("test getSubjects") {
            // uncomment below to test getSubjects
            //val type : SubjectType =  // SubjectType | 条目类型
            //val cat : SubjectCategory =  // SubjectCategory | 条目分类，参照 `SubjectCategory` enum
            //val series : kotlin.Boolean = true // kotlin.Boolean | 是否系列，仅对书籍类型的条目有效
            //val platform : kotlin.String = platform_example // kotlin.String | 平台，仅对游戏类型的条目有效
            //val sort : kotlin.String = sort_example // kotlin.String | 排序，枚举值 {date|rank}
            //val year : kotlin.Int = 56 // kotlin.Int | 年份
            //val month : kotlin.Int = 56 // kotlin.Int | 月份
            //val limit : kotlin.Int = 56 // kotlin.Int | 分页参数
            //val offset : kotlin.Int = 56 // kotlin.Int | 分页参数
            //val result : PagedSubject = apiInstance.getSubjects(type, cat, series, platform, sort, year, month, limit, offset)
            //result shouldBe ("TODO")
        }

        // to test searchSubjects
        should("test searchSubjects") {
            // uncomment below to test searchSubjects
            //val limit : kotlin.Int = 56 // kotlin.Int | 分页参数
            //val offset : kotlin.Int = 56 // kotlin.Int | 分页参数
            //val searchSubjectsRequest : SearchSubjectsRequest =  // SearchSubjectsRequest |
            //val result : SearchSubjects200Response = apiInstance.searchSubjects(limit, offset, searchSubjectsRequest)
            //result shouldBe ("TODO")
        }

    }
}
