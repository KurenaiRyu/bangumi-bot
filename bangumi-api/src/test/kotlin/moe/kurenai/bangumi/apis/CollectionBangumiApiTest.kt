/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package moe.kurenai.bangumi.apis

import io.kotlintest.specs.ShouldSpec

class CollectionBangumiApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of CollectionBangumiApi
        //val apiInstance = CollectionBangumiApi()

        // to test getUserCharacterCollection
        should("test getUserCharacterCollection") {
            // uncomment below to test getUserCharacterCollection
            //val username : kotlin.String = username_example // kotlin.String | 设置了用户名之后无法使用 UID。
            //val characterId : kotlin.Int = 56 // kotlin.Int | 角色 ID
            //val result : UserCharacterCollection = apiInstance.getUserCharacterCollection(username, characterId)
            //result shouldBe ("TODO")
        }

        // to test getUserCharacterCollections
        should("test getUserCharacterCollections") {
            // uncomment below to test getUserCharacterCollections
            //val username : kotlin.String = username_example // kotlin.String | 设置了用户名之后无法使用 UID。
            //val result : PagedUserCharacterCollection = apiInstance.getUserCharacterCollections(username)
            //result shouldBe ("TODO")
        }

        // to test getUserCollection
        should("test getUserCollection") {
            // uncomment below to test getUserCollection
            //val username : kotlin.String = username_example // kotlin.String | 设置了用户名之后无法使用 UID。
            //val subjectId : kotlin.Int = 56 // kotlin.Int | 条目 ID
            //val result : UserSubjectCollection = apiInstance.getUserCollection(username, subjectId)
            //result shouldBe ("TODO")
        }

        // to test getUserCollectionsByUsername
        should("test getUserCollectionsByUsername") {
            // uncomment below to test getUserCollectionsByUsername
            //val username : kotlin.String = username_example // kotlin.String | 设置了用户名之后无法使用 UID。
            //val subjectType : SubjectType =  // SubjectType | 条目类型，默认为全部  具体含义见 [SubjectType](#model-SubjectType)
            //val type : SubjectCollectionType = 56 // SubjectCollectionType | 收藏类型，默认为全部  具体含义见 [CollectionType](#model-CollectionType)
            //val limit : kotlin.Int = 56 // kotlin.Int | 分页参数
            //val offset : kotlin.Int = 56 // kotlin.Int | 分页参数
            //val result : PagedUserCollection = apiInstance.getUserCollectionsByUsername(username, subjectType, type, limit, offset)
            //result shouldBe ("TODO")
        }

        // to test getUserEpisodeCollection
        should("test getUserEpisodeCollection") {
            // uncomment below to test getUserEpisodeCollection
            //val episodeId : kotlin.Int = 56 // kotlin.Int | 章节 ID
            //val result : UserEpisodeCollection = apiInstance.getUserEpisodeCollection(episodeId)
            //result shouldBe ("TODO")
        }

        // to test getUserPersonCollection
        should("test getUserPersonCollection") {
            // uncomment below to test getUserPersonCollection
            //val username : kotlin.String = username_example // kotlin.String | 设置了用户名之后无法使用 UID。
            //val personId : kotlin.Int = 56 // kotlin.Int | 人物 ID
            //val result : UserPersonCollection = apiInstance.getUserPersonCollection(username, personId)
            //result shouldBe ("TODO")
        }

        // to test getUserPersonCollections
        should("test getUserPersonCollections") {
            // uncomment below to test getUserPersonCollections
            //val username : kotlin.String = username_example // kotlin.String | 设置了用户名之后无法使用 UID。
            //val result : PagedUserPersonCollection = apiInstance.getUserPersonCollections(username)
            //result shouldBe ("TODO")
        }

        // to test getUserSubjectEpisodeCollection
        should("test getUserSubjectEpisodeCollection") {
            // uncomment below to test getUserSubjectEpisodeCollection
            //val subjectId : kotlin.Int = 56 // kotlin.Int | 条目 ID
            //val offset : kotlin.Int = 56 // kotlin.Int | 分页参数
            //val limit : kotlin.Int = 56 // kotlin.Int | 分页参数
            //val episodeType : EpType =  // EpType | 章节类型，不传则不按照章节进行筛选
            //val result : GetUserSubjectEpisodeCollection200Response = apiInstance.getUserSubjectEpisodeCollection(subjectId, offset, limit, episodeType)
            //result shouldBe ("TODO")
        }

        // to test patchUserCollection
        should("test patchUserCollection") {
            // uncomment below to test patchUserCollection
            //val subjectId : kotlin.Int = 56 // kotlin.Int | 条目 ID
            //val userSubjectCollectionModifyPayload : UserSubjectCollectionModifyPayload =  // UserSubjectCollectionModifyPayload |
            //apiInstance.patchUserCollection(subjectId, userSubjectCollectionModifyPayload)
        }

        // to test patchUserSubjectEpisodeCollection
        should("test patchUserSubjectEpisodeCollection") {
            // uncomment below to test patchUserSubjectEpisodeCollection
            //val subjectId : kotlin.Int = 56 // kotlin.Int | 条目 ID
            //val patchUserSubjectEpisodeCollectionRequest : PatchUserSubjectEpisodeCollectionRequest =  // PatchUserSubjectEpisodeCollectionRequest |
            //apiInstance.patchUserSubjectEpisodeCollection(subjectId, patchUserSubjectEpisodeCollectionRequest)
        }

        // to test postUserCollection
        should("test postUserCollection") {
            // uncomment below to test postUserCollection
            //val subjectId : kotlin.Int = 56 // kotlin.Int | 条目 ID
            //val userSubjectCollectionModifyPayload : UserSubjectCollectionModifyPayload =  // UserSubjectCollectionModifyPayload |
            //apiInstance.postUserCollection(subjectId, userSubjectCollectionModifyPayload)
        }

        // to test putUserEpisodeCollection
        should("test putUserEpisodeCollection") {
            // uncomment below to test putUserEpisodeCollection
            //val episodeId : kotlin.Int = 56 // kotlin.Int | 章节 ID
            //val putUserEpisodeCollectionRequest : PutUserEpisodeCollectionRequest =  // PutUserEpisodeCollectionRequest |
            //apiInstance.putUserEpisodeCollection(episodeId, putUserEpisodeCollectionRequest)
        }

    }
}
